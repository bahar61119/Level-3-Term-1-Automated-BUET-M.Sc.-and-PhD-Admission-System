--------------------------------------------------------
--  File created - Wednesday-June-19-2013   
--------------------------------------------------------
DROP TABLE "BAHAR"."ADMISSION_TEST" cascade constraints;
DROP TABLE "BAHAR"."BSC_BASIC_INFO" cascade constraints;
DROP TABLE "BAHAR"."BSC_CGPA" cascade constraints;
DROP TABLE "BAHAR"."BSC_DOCUMENT" cascade constraints;
DROP TABLE "BAHAR"."BSC_MARKS" cascade constraints;
DROP TABLE "BAHAR"."BUET_GRATUDE" cascade constraints;
DROP TABLE "BAHAR"."BUET_MASTERS" cascade constraints;
DROP TABLE "BAHAR"."COMMENT_ON" cascade constraints;
DROP TABLE "BAHAR"."CURRENT_ADMISSION_INFO" cascade constraints;
DROP TABLE "BAHAR"."DOCUMENT_INFO" cascade constraints;
DROP TABLE "BAHAR"."ELIGIBILITY" cascade constraints;
DROP TABLE "BAHAR"."EMPLOYEE_STATUS" cascade constraints;
DROP TABLE "BAHAR"."HIGHER_SECONDARY" cascade constraints;
DROP TABLE "BAHAR"."HIGHER_SECONDARY_DOCUMENT" cascade constraints;
DROP TABLE "BAHAR"."HIGHER_SECONDARY_GPA" cascade constraints;
DROP TABLE "BAHAR"."HIGHER_SECONDARY_MARKS" cascade constraints;
DROP TABLE "BAHAR"."INELIGIBILITY" cascade constraints;
DROP TABLE "BAHAR"."INELIGIBILITY_DOC" cascade constraints;
DROP TABLE "BAHAR"."JOB_EXP" cascade constraints;
DROP TABLE "BAHAR"."MEMBERS" cascade constraints;
DROP TABLE "BAHAR"."MSC_BASIC_INFO" cascade constraints;
DROP TABLE "BAHAR"."MSC_CGPA" cascade constraints;
DROP TABLE "BAHAR"."MSC_DOCUMENT" cascade constraints;
DROP TABLE "BAHAR"."MSC_MARKS" cascade constraints;
DROP TABLE "BAHAR"."PHONE" cascade constraints;
DROP TABLE "BAHAR"."PHOTO" cascade constraints;
DROP TABLE "BAHAR"."PRE_ADMISSION" cascade constraints;
DROP TABLE "BAHAR"."REFERENCE" cascade constraints;
DROP TABLE "BAHAR"."SEARCH_QUERY" cascade constraints;
DROP TABLE "BAHAR"."SECONDARY" cascade constraints;
DROP TABLE "BAHAR"."SECONDARY_DOCUMENT" cascade constraints;
DROP TABLE "BAHAR"."SECONDARY_GPA" cascade constraints;
DROP TABLE "BAHAR"."SECONDARY_MARKS" cascade constraints;
DROP TABLE "BAHAR"."STUDENT_CONTACT_INFO" cascade constraints;
DROP TABLE "BAHAR"."STUDENT_PERSONAL_INFO" cascade constraints;
DROP SEQUENCE "BAHAR"."AUTO_INC";
--------------------------------------------------------
--  DDL for Sequence AUTO_INC
--------------------------------------------------------

   CREATE SEQUENCE  "BAHAR"."AUTO_INC"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 502 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ADMISSION_TEST
--------------------------------------------------------

  CREATE TABLE "BAHAR"."ADMISSION_TEST" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(20 BYTE), 
	"PRESENT_ADM_TEST" VARCHAR2(20 BYTE), 
	"MARKS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BSC_BASIC_INFO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."BSC_BASIC_INFO" 
   (	"ID" NUMBER, 
	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"CER_DEG_OBT_FROM" VARCHAR2(200 BYTE), 
	"DEGREE_NAME" VARCHAR2(200 BYTE), 
	"CREDIT_TRANSFER" VARCHAR2(20 BYTE), 
	"CREDIT_EARNED" NUMBER, 
	"CRE_EARN_WITHOUT_EXEMPTION" NUMBER, 
	"GRADE_SYSTEM" VARCHAR2(100 BYTE), 
	"PASSING_YEAR" NUMBER, 
	"DURATION_FROM" DATE, 
	"DURATION_TO" DATE, 
	"DURATION_OF_DEGREE" NUMBER, 
	"MAJOR_FIELD_SPECIALIZATION" VARCHAR2(100 BYTE), 
	"CMT_EQUIVALENCE_COMMITTEE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BSC_CGPA
--------------------------------------------------------

  CREATE TABLE "BAHAR"."BSC_CGPA" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"BSC_ID" NUMBER, 
	"CGPA" NUMBER, 
	"CGPA_AB_2_5" VARCHAR2(20 BYTE), 
	"CGPA_SCALE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BSC_DOCUMENT
--------------------------------------------------------

  CREATE TABLE "BAHAR"."BSC_DOCUMENT" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"BSC_ID" NUMBER, 
	"TRANSCRIPT" VARCHAR2(20 BYTE), 
	"CERTIFICATE" VARCHAR2(20 BYTE), 
	"TESTIMONIAL" VARCHAR2(20 BYTE), 
	"TESTIMONIAL_AUTHORIZED_PERSON" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BSC_MARKS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."BSC_MARKS" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"BSC_ID" NUMBER, 
	"PER_MARKS" NUMBER, 
	"MARKS_AB_50_PER" VARCHAR2(20 BYTE), 
	"TOTAL_MARKS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BUET_GRATUDE
--------------------------------------------------------

  CREATE TABLE "BAHAR"."BUET_GRATUDE" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"BSC_ID" NUMBER, 
	"DEPARTMENT" VARCHAR2(200 BYTE), 
	"STUDENT_ID" NUMBER, 
	"TESTIMONIAL_DSW_PROVIDED" VARCHAR2(20 BYTE), 
	"CMT_DSW_OFFICE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BUET_MASTERS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."BUET_MASTERS" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"MSC_ID" NUMBER, 
	"DEPARTMENT" VARCHAR2(200 BYTE), 
	"STUDENT_ID" VARCHAR2(20 BYTE), 
	"TESTIMONIAL_DSW_PROVIDED" VARCHAR2(20 BYTE), 
	"CMT_DSW_OFFICE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table COMMENT_ON
--------------------------------------------------------

  CREATE TABLE "BAHAR"."COMMENT_ON" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"COMMENTS" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CURRENT_ADMISSION_INFO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."CURRENT_ADMISSION_INFO" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"DEPT_INST" VARCHAR2(300 BYTE), 
	"DIVISION" VARCHAR2(200 BYTE), 
	"DESIRED_STATUS" VARCHAR2(100 BYTE), 
	"PRE_ADMISSION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DOCUMENT_INFO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."DOCUMENT_INFO" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"REQUIRED_MISSING_DOC" VARCHAR2(20 BYTE), 
	"EMP_LET_CONSENT_PRE_FORM" VARCHAR2(20 BYTE), 
	"CER_MEN_TOTAL_CREDIT_HR_EARNED" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ELIGIBILITY
--------------------------------------------------------

  CREATE TABLE "BAHAR"."ELIGIBILITY" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"FULFILL_MIN_REQUIREMENT" VARCHAR2(20 BYTE), 
	"IS_ELIGIBLE_ADM_TEST" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMPLOYEE_STATUS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."EMPLOYEE_STATUS" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"IS_EMPLOYED" VARCHAR2(20 BYTE), 
	"EMP_STATUS" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HIGHER_SECONDARY
--------------------------------------------------------

  CREATE TABLE "BAHAR"."HIGHER_SECONDARY" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"CER_DEG_OBT_FROM" VARCHAR2(200 BYTE), 
	"DEGREE_NAME" VARCHAR2(200 BYTE), 
	"BOARD" VARCHAR2(200 BYTE), 
	"GRADE_SYSTEM" VARCHAR2(100 BYTE), 
	"PASSING_YEAR" NUMBER, 
	"DURATION_FROM" DATE, 
	"DURATION_TO" DATE, 
	"DURATION_OF_DEGREE" NUMBER, 
	"MAJOR_FIELD_SPECIALIZATION" VARCHAR2(100 BYTE), 
	"CMT_EQUIVALENCE_COMMITTEE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HIGHER_SECONDARY_DOCUMENT
--------------------------------------------------------

  CREATE TABLE "BAHAR"."HIGHER_SECONDARY_DOCUMENT" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"TRANSCRIPT" VARCHAR2(20 BYTE), 
	"CERTIFICATE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HIGHER_SECONDARY_GPA
--------------------------------------------------------

  CREATE TABLE "BAHAR"."HIGHER_SECONDARY_GPA" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"GPA" NUMBER, 
	"GPA_AB_3_5" VARCHAR2(20 BYTE), 
	"GPA_LESS_2" VARCHAR2(20 BYTE), 
	"GPA_SCALE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table HIGHER_SECONDARY_MARKS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."HIGHER_SECONDARY_MARKS" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PER_MARKS" NUMBER, 
	"FIRST_DIV" VARCHAR2(20 BYTE), 
	"THIRD_DIV" VARCHAR2(20 BYTE), 
	"TOTAL_MARKS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table INELIGIBILITY
--------------------------------------------------------

  CREATE TABLE "BAHAR"."INELIGIBILITY" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"COMMENTS" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table INELIGIBILITY_DOC
--------------------------------------------------------

  CREATE TABLE "BAHAR"."INELIGIBILITY_DOC" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"COMMENTS" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table JOB_EXP
--------------------------------------------------------

  CREATE TABLE "BAHAR"."JOB_EXP" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"DESIGNATION" VARCHAR2(50 BYTE), 
	"EXP_DURATION_FROM" DATE, 
	"EXP_DURATION_TO" DATE, 
	"EXP_ORGANIZATION" VARCHAR2(150 BYTE), 
	"JOB_DESCRIPTION" VARCHAR2(100 BYTE), 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MEMBERS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."MEMBERS" 
   (	"ID" NUMBER, 
	"FIRST_NAME" VARCHAR2(100 BYTE), 
	"LAST_NAME" VARCHAR2(100 BYTE), 
	"USERNAME" VARCHAR2(100 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(160 BYTE), 
	"DESIGNATION" VARCHAR2(100 BYTE), 
	"ADDRESS" VARCHAR2(300 BYTE), 
	"PHONE" VARCHAR2(100 BYTE), 
	"ROLE" VARCHAR2(100 BYTE), 
	 CONSTRAINT "MEMBERS_PK" PRIMARY KEY ("ID") ENABLE
   ) ORGANIZATION INDEX NOCOMPRESS PCTFREE 10 INITRANS 2 MAXTRANS 255 LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 PCTTHRESHOLD 50;
--------------------------------------------------------
--  DDL for Table MSC_BASIC_INFO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."MSC_BASIC_INFO" 
   (	"ID" NUMBER, 
	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"CER_DEG_OBT_FROM" VARCHAR2(200 BYTE), 
	"DEGREE_NAME" VARCHAR2(200 BYTE), 
	"CREDIT_TRANSFER" VARCHAR2(20 BYTE), 
	"CREDIT_EARNED" NUMBER, 
	"CRE_EARN_WITHOUT_EXEMPTION" NUMBER, 
	"GRADE_SYSTEM" VARCHAR2(100 BYTE), 
	"PASSING_YEAR" NUMBER, 
	"DURATION_FROM" DATE, 
	"DURATION_TO" DATE, 
	"DURATION_OF_DEGREE" NUMBER, 
	"MAJOR_FIELD_SPECIALIZATION" VARCHAR2(100 BYTE), 
	"CMT_EQUIVALENCE_COMMITTEE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MSC_CGPA
--------------------------------------------------------

  CREATE TABLE "BAHAR"."MSC_CGPA" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"MSC_ID" NUMBER, 
	"CGPA" NUMBER, 
	"CGPA_AB_2_7_5" VARCHAR2(20 BYTE), 
	"CGPA_SCALE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MSC_DOCUMENT
--------------------------------------------------------

  CREATE TABLE "BAHAR"."MSC_DOCUMENT" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"MSC_ID" NUMBER, 
	"TRANSCRIPT" VARCHAR2(20 BYTE), 
	"CERTIFICATE" VARCHAR2(20 BYTE), 
	"TESTIMONIAL" VARCHAR2(20 BYTE), 
	"TESTIMONIAL_AUTHORIZED_PERSON" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MSC_MARKS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."MSC_MARKS" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"MSC_ID" NUMBER, 
	"PER_MARKS" NUMBER, 
	"MARKS_AB_55_PER" VARCHAR2(20 BYTE), 
	"TOTAL_MARKS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PHONE
--------------------------------------------------------

  CREATE TABLE "BAHAR"."PHONE" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PHONE_NUM" VARCHAR2(100 BYTE), 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PHOTO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."PHOTO" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"FILE_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRE_ADMISSION
--------------------------------------------------------

  CREATE TABLE "BAHAR"."PRE_ADMISSION" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PROGRAM" VARCHAR2(100 BYTE), 
	"PRE_STD_ID" NUMBER(20,0), 
	"PRE_DEPT_INST" VARCHAR2(100 BYTE), 
	"PRE_SEMESTER" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table REFERENCE
--------------------------------------------------------

  CREATE TABLE "BAHAR"."REFERENCE" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"REF_NAME" VARCHAR2(50 BYTE), 
	"REF_ADDRESS" VARCHAR2(100 BYTE), 
	"REF_MOBILE" VARCHAR2(50 BYTE), 
	"ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SEARCH_QUERY
--------------------------------------------------------

  CREATE TABLE "BAHAR"."SEARCH_QUERY" 
   (	"ID" NUMBER, 
	"QUERY" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SECONDARY
--------------------------------------------------------

  CREATE TABLE "BAHAR"."SECONDARY" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"CER_DEG_OBT_FROM" VARCHAR2(200 BYTE), 
	"DEGREE_NAME" VARCHAR2(200 BYTE), 
	"BOARD" VARCHAR2(200 BYTE), 
	"GRADE_SYSTEM" VARCHAR2(100 BYTE), 
	"PASSING_YEAR" NUMBER, 
	"DURATION_FROM" DATE, 
	"DURATION_TO" DATE, 
	"DURATION_OF_DEGREE" NUMBER, 
	"MAJOR_FIELD_SPECIALIZATION" VARCHAR2(100 BYTE), 
	"CMT_EQUIVALENCE_COMMITTEE" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SECONDARY_DOCUMENT
--------------------------------------------------------

  CREATE TABLE "BAHAR"."SECONDARY_DOCUMENT" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"TRANSCRIPT" VARCHAR2(20 BYTE), 
	"CERTIFICATE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SECONDARY_GPA
--------------------------------------------------------

  CREATE TABLE "BAHAR"."SECONDARY_GPA" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"GPA" NUMBER, 
	"GPA_AB_3_5" VARCHAR2(20 BYTE), 
	"GPA_LESS_2" VARCHAR2(20 BYTE), 
	"GPA_SCALE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SECONDARY_MARKS
--------------------------------------------------------

  CREATE TABLE "BAHAR"."SECONDARY_MARKS" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PER_MARKS" NUMBER, 
	"FIRST_DIV" VARCHAR2(20 BYTE), 
	"THIRD_DIV" VARCHAR2(20 BYTE), 
	"TOTAL_MARKS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table STUDENT_CONTACT_INFO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."STUDENT_CONTACT_INFO" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"PRESENT_ADDRESS" VARCHAR2(400 BYTE), 
	"PERMAMENT_ADDRESS" VARCHAR2(400 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table STUDENT_PERSONAL_INFO
--------------------------------------------------------

  CREATE TABLE "BAHAR"."STUDENT_PERSONAL_INFO" 
   (	"APPLICANT_SERIAL" NUMBER(20,0), 
	"APPLICANT_NAME" VARCHAR2(50 BYTE), 
	"FATHER_NAME" VARCHAR2(50 BYTE), 
	"MOTHER_NAME" VARCHAR2(50 BYTE), 
	"BIRTH_DATE" DATE, 
	"BIRTH_PLACE" VARCHAR2(50 BYTE), 
	"SEX" VARCHAR2(10 BYTE), 
	"MARITAL_STATUS" VARCHAR2(10 BYTE), 
	"NATIONALITY" VARCHAR2(20 BYTE), 
	"RELIGION" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into BAHAR.ADMISSION_TEST
SET DEFINE OFF;
REM INSERTING into BAHAR.BSC_BASIC_INFO
SET DEFINE OFF;
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100367,'MSc','BUET','CSE','no',80,80,'CGPA',2011,to_date('01-JAN-12','DD-MON-RR'),to_date('05-JAN-13','DD-MON-RR'),3,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100368,'MSc','RUET','B. Sc. in CSE','no',80,80,'CGPA',2010,to_date('17-MAY-13','DD-MON-RR'),to_date('02-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100375,'MSc','KUET','B. Sc. in CSE','no',80,80,'CGPA',2007,to_date('03-JUN-13','DD-MON-RR'),to_date('06-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100376,'MSc','BRACK','CSE','no',75,46,'CGPA',2010,to_date('07-MAY-13','DD-MON-RR'),to_date('05-JUN-13','DD-MON-RR'),5,'MATH','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100362,'MSc','DU','B. Sc. in CSE','no',80,80,'CGPA',2012,to_date('03-JUN-13','DD-MON-RR'),to_date('05-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100363,'MSc','AUST','B. Sc. in CSE','no',80,80,'CGPA',2007,to_date('01-JAN-03','DD-MON-RR'),to_date('31-DEC-07','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100377,'MSc','KUET','CSE','no',71,41,'CGPA',2010,to_date('01-JAN-13','DD-MON-RR'),to_date('05-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100380,'MSc','RUET','CSE','no',80,80,'Percentage of Marks',2010,to_date('01-JAN-13','DD-MON-RR'),to_date('05-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100383,'MSc','RUET','CSE','no',80,80,'CGPA',2010,to_date('01-JAN-13','DD-MON-RR'),to_date('05-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100402,'PhD','Stamford University Bangladesh','B.Sc. in CSE','no',160,160,'CGPA',2003,to_date('01-MAY-99','DD-MON-RR'),to_date('30-APR-03','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100422,'MSc','Dhaka University of Engineering &amp; Technology(DUET)','B.Sc in Engineering','no',80,46,'CGPA',2012,to_date('01-JAN-08','DD-MON-RR'),to_date('01-JAN-12','DD-MON-RR'),5,'MATH','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100423,'PhD','BRACK','BABACHELOR OF COMPUTER APPLICATIONS','no',80,80,'CGPA',2001,to_date('01-APR-98','DD-MON-RR'),to_date('30-APR-01','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100424,'PhD','Khulna University of Engineering and Technology','B. Sc. in CSE','no',160,160,'CGPA',2003,to_date('21-JUN-99','DD-MON-RR'),to_date('10-SEP-03','DD-MON-RR'),5,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100425,'PhD','NSU','B. Sc. in CSE','no',160,159,'CGPA',2006,to_date('01-MAY-02','DD-MON-RR'),to_date('28-FEB-06','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100426,'PhD','Asian Universityof Bangladesh','B.Sc (Engg.) in CSE','no',160,160,'CGPA',2005,to_date('01-MAY-01','DD-MON-RR'),to_date('17-AUG-05','DD-MON-RR'),5,'CSE','PENDING');
Insert into BAHAR.BSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100427,'PhD','KUET','CSE','no',80,80,'CGPA',2010,to_date('02-JUN-13','DD-MON-RR'),to_date('02-JUN-13','DD-MON-RR'),4,'CSE','PENDING');
REM INSERTING into BAHAR.BSC_CGPA
SET DEFINE OFF;
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100362,'MSc',1,3.56,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100367,'MSc',1,3.56,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100363,'MSc',1,3.06,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100368,'MSc',1,3.06,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100375,'MSc',1,3.06,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100376,'MSc',1,3.5,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100377,'MSc',1,3.99,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100383,'MSc',1,3.06,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100402,'PhD',1,3.91,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100422,'MSc',1,3.63,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100423,'PhD',1,3.5,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100424,'PhD',1,3.57,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100425,'PhD',1,3.16,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100426,'PhD',1,2.9,'yes',4);
Insert into BAHAR.BSC_CGPA (APPLICANT_SERIAL,PROGRAM,BSC_ID,CGPA,CGPA_AB_2_5,CGPA_SCALE) values (100427,'PhD',1,3.56,'yes',4);
REM INSERTING into BAHAR.BSC_DOCUMENT
SET DEFINE OFF;
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100362,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100367,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100363,'MSc',1,'PENDING','no','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100368,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100375,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100376,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100377,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100380,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100383,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100402,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100422,'MSc',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100423,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100424,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100425,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100426,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.BSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,BSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100427,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
REM INSERTING into BAHAR.BSC_MARKS
SET DEFINE OFF;
Insert into BAHAR.BSC_MARKS (APPLICANT_SERIAL,PROGRAM,BSC_ID,PER_MARKS,MARKS_AB_50_PER,TOTAL_MARKS) values (100380,'MSc',1,69,'yes',1000);
REM INSERTING into BAHAR.BUET_GRATUDE
SET DEFINE OFF;
Insert into BAHAR.BUET_GRATUDE (APPLICANT_SERIAL,PROGRAM,BSC_ID,DEPARTMENT,STUDENT_ID,TESTIMONIAL_DSW_PROVIDED,CMT_DSW_OFFICE) values (100367,'MSc',1,'CSE',905050,'PENDING','PENDING');
REM INSERTING into BAHAR.BUET_MASTERS
SET DEFINE OFF;
Insert into BAHAR.BUET_MASTERS (APPLICANT_SERIAL,PROGRAM,MSC_ID,DEPARTMENT,STUDENT_ID,TESTIMONIAL_DSW_PROVIDED,CMT_DSW_OFFICE) values (100402,'PhD',1,'CSE','002154','yes','PENDING');
REM INSERTING into BAHAR.COMMENT_ON
SET DEFINE OFF;
Insert into BAHAR.COMMENT_ON (APPLICANT_SERIAL,COMMENTS) values (100362,'bahar');
Insert into BAHAR.COMMENT_ON (APPLICANT_SERIAL,COMMENTS) values (100362,'HIJI BIJI');
REM INSERTING into BAHAR.CURRENT_ADMISSION_INFO
SET DEFINE OFF;
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100367,'MSc','CSE','Computer Architecture','Full Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100362,'MSc','CSE','Computer Architecture','Full Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100363,'MSc','CSE','Networking','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100368,'MSc','CSE','Networking','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100375,'MSc','CSE','Networking','Full Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100376,'MSc','EEE','Software Engineering','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100377,'MSc','EEE','Computer Architecture','Full Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100380,'MSc','CSE','Networking','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100383,'MSc','CSE','Computer Architecture','Full Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100402,'PhD','CSE','Computer Architecture','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100422,'MSc','CSE','Software Engineering','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100423,'PhD','CSE','Software Engineering','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100424,'PhD','CSE','Computer Architecture','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100425,'PhD','CSE','Networking','Part Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100426,'PhD','CSE','Computer Architecture','Full Time','no');
Insert into BAHAR.CURRENT_ADMISSION_INFO (APPLICANT_SERIAL,PROGRAM,DEPT_INST,DIVISION,DESIRED_STATUS,PRE_ADMISSION) values (100427,'PhD','CSE','Computer Architecture','Full Time','no');
REM INSERTING into BAHAR.DOCUMENT_INFO
SET DEFINE OFF;
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100362,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100367,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100363,'no','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100368,'yes','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100375,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100376,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100377,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100380,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100383,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100402,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100422,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100423,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100424,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100425,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100426,'PENDING','PENDING','PENDING');
Insert into BAHAR.DOCUMENT_INFO (APPLICANT_SERIAL,REQUIRED_MISSING_DOC,EMP_LET_CONSENT_PRE_FORM,CER_MEN_TOTAL_CREDIT_HR_EARNED) values (100427,'PENDING','PENDING','PENDING');
REM INSERTING into BAHAR.ELIGIBILITY
SET DEFINE OFF;
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100362,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100367,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100363,'PENDING','no');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100368,'PENDING','no');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100375,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100376,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100377,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100380,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100383,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100402,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100422,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100423,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100424,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100425,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100426,'PENDING','PENDING');
Insert into BAHAR.ELIGIBILITY (APPLICANT_SERIAL,FULFILL_MIN_REQUIREMENT,IS_ELIGIBLE_ADM_TEST) values (100427,'PENDING','no');
REM INSERTING into BAHAR.EMPLOYEE_STATUS
SET DEFINE OFF;
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100362,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100363,'yes','Part Time');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100367,'yes','Full Time');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100368,'yes','Part Time');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100375,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100376,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100377,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100380,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100383,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100402,'yes','Full Time');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100422,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100423,'yes','Full Time');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100424,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100425,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100426,'no','Not Employee');
Insert into BAHAR.EMPLOYEE_STATUS (APPLICANT_SERIAL,IS_EMPLOYED,EMP_STATUS) values (100427,'no','Not Employee');
REM INSERTING into BAHAR.HIGHER_SECONDARY
SET DEFINE OFF;
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100362,'Notra Dame College','HSC','DHAKA','GPA',2006,to_date('02-FEB-03','DD-MON-RR'),to_date('14-SEP-06','DD-MON-RR'),3,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100367,'Milestone School And College','HSC','DHAKA','PERECNTAGE_MARKS',2008,to_date('12-MAY-05','DD-MON-RR'),to_date('04-MAR-10','DD-MON-RR'),3,'ART','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100363,'Dhaka College','HSC','DHAKA','PERECNTAGE_MARKS',2002,to_date('01-JAN-00','DD-MON-RR'),to_date('30-SEP-01','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100368,'Milestone School And College','HSC','BARISAL','GPA',2007,to_date('18-APR-13','DD-MON-RR'),to_date('15-MAY-13','DD-MON-RR'),3,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100375,'Milestone School And College','HSC','DHAKA','PERECNTAGE_MARKS',2002,to_date('04-JUN-13','DD-MON-RR'),to_date('07-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100376,'Notra Dame College','ALEVEL','CHITTAGONG','GPA',2004,to_date('15-MAY-13','DD-MON-RR'),to_date('06-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100377,'Chuadanga Govt. College','HSC','DHAKA','GPA',2006,to_date('14-MAR-13','DD-MON-RR'),to_date('09-MAY-13','DD-MON-RR'),2,'ARTS','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100380,'Milestone School And College','HSC','DHAKA','GPA',2006,to_date('14-MAR-13','DD-MON-RR'),to_date('09-MAY-13','DD-MON-RR'),2,'COMMERCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100383,'Milestone School And College','HSC','DHAKA','GPA',2006,to_date('14-MAR-13','DD-MON-RR'),to_date('09-MAY-13','DD-MON-RR'),2,'COMMERCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100402,'Govt. Begum Badrunnesa Mohila College, Dhaka','HSC','DHAKA','PERECNTAGE_MARKS',1998,to_date('01-AUG-96','DD-MON-RR'),to_date('24-SEP-98','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100422,'Rajuk School And College','HSC','RAJSHAHI','GPA',2006,to_date('01-MAY-06','DD-MON-RR'),to_date('01-MAY-06','DD-MON-RR'),4,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100423,'RAJSHAHI COLLEGE','HSC','RAJSHAHI','PERECNTAGE_MARKS',1997,to_date('01-MAY-95','DD-MON-RR'),to_date('28-FEB-97','DD-MON-RR'),3,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100424,'Chuadanga Govt. College','HSC','DHAKA','PERECNTAGE_MARKS',1997,to_date('01-JAN-96','DD-MON-RR'),to_date('11-SEP-97','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100425,'Notra Dame College','HSC','DHAKA','PERECNTAGE_MARKS',2001,to_date('01-JUL-99','DD-MON-RR'),to_date('30-JUN-01','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100426,'Mirpur Girls Ideal Laboratory Institute','HSC','DHAKA','PERECNTAGE_MARKS',2000,to_date('01-JAN-99','DD-MON-RR'),to_date('26-AUG-00','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.HIGHER_SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100427,'Milestone School And College','HSC','BARISAL','GPA',2007,to_date('02-JUN-13','DD-MON-RR'),to_date('04-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
REM INSERTING into BAHAR.HIGHER_SECONDARY_DOCUMENT
SET DEFINE OFF;
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100362,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100367,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100363,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100368,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100375,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100376,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100377,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100380,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100383,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100402,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100422,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100423,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100424,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100425,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100426,'PENDING','PENDING');
Insert into BAHAR.HIGHER_SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100427,'PENDING','PENDING');
REM INSERTING into BAHAR.HIGHER_SECONDARY_GPA
SET DEFINE OFF;
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100362,2.48,'no','no',4);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100376,5,'yes','no',5);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100368,5,'yes','no',5);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100377,3.48,'no','no',5);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100380,3.48,'no','no',5);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100383,3.48,'no','no',5);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100422,4.63,'yes','no',5);
Insert into BAHAR.HIGHER_SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100427,5,'yes','no',5);
REM INSERTING into BAHAR.HIGHER_SECONDARY_MARKS
SET DEFINE OFF;
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100363,45,'no','no',1200);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100375,62,'yes','no',1200);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100367,60,'yes','no',1000);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100402,65,'yes','no',1200);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100423,66,'yes','no',1200);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100424,82.8,'yes','no',1000);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100425,65.1,'yes','no',1200);
Insert into BAHAR.HIGHER_SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100426,58.6,'no','no',1200);
REM INSERTING into BAHAR.INELIGIBILITY
SET DEFINE OFF;
Insert into BAHAR.INELIGIBILITY (APPLICANT_SERIAL,COMMENTS) values (100368,'DOC_SSC TRANSCRIPT missing.');
Insert into BAHAR.INELIGIBILITY (APPLICANT_SERIAL,COMMENTS) values (100427,'MSC Credit Earned without Exemption.');
Insert into BAHAR.INELIGIBILITY (APPLICANT_SERIAL,COMMENTS) values (100368,'SSC GPA is less than required.');
Insert into BAHAR.INELIGIBILITY (APPLICANT_SERIAL,COMMENTS) values (100363,'DOC_BSC CERTIFICATE missing.');
REM INSERTING into BAHAR.INELIGIBILITY_DOC
SET DEFINE OFF;
Insert into BAHAR.INELIGIBILITY_DOC (APPLICANT_SERIAL,COMMENTS) values (100368,'DOC');
Insert into BAHAR.INELIGIBILITY_DOC (APPLICANT_SERIAL,COMMENTS) values (100363,'DOC');
REM INSERTING into BAHAR.JOB_EXP
SET DEFINE OFF;
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100363,'Software Developer',to_date('01-JAN-10','DD-MON-RR'),to_date('31-MAR-13','DD-MON-RR'),'Idea Corporate','Developing Web page',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100367,'JUNIOR PROGRAMMER',to_date('02-JUN-13','DD-MON-RR'),to_date('04-JUN-13','DD-MON-RR'),'IBCS-PRIMAX SOFTWARE(BD) LTD.','SOFTWARE DEVELOPMENT',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100368,'IT Coordinator',to_date('02-DEC-12','DD-MON-RR'),to_date('12-FEB-13','DD-MON-RR'),'FHI, Bangladesh','Network management, IT application development',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100375,'Software Developer',to_date('06-JUN-13','DD-MON-RR'),to_date('07-JUN-13','DD-MON-RR'),'Idea Corporate','GHJGHG GJH',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100377,'Software Engineer',to_date('05-FEB-13','DD-MON-RR'),to_date('14-MAR-13','DD-MON-RR'),'Idea Corporate','ARC Bangladesh',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100380,'Software Developer',to_date('05-FEB-13','DD-MON-RR'),to_date('14-MAR-13','DD-MON-RR'),'Idea Corporate','ERP SERVER, H/W, S/W &amp; TETWORKING TROUBLESHOOTING.',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100383,'Software Developer',to_date('01-FEB-13','DD-MON-RR'),to_date('07-MAR-13','DD-MON-RR'),'FHI 360, Bangladesh','ERP SERVER, H/W, S/W &amp; TETWORKING TROUBLESHOOTING.',1);
Insert into BAHAR.JOB_EXP (APPLICANT_SERIAL,DESIGNATION,EXP_DURATION_FROM,EXP_DURATION_TO,EXP_ORGANIZATION,JOB_DESCRIPTION,ID) values (100402,'Assistant Professor',to_date('05-AUG-03','DD-MON-RR'),to_date('30-MAR-13','DD-MON-RR'),'Stamford University Bangladesh','Teaching',1);
REM INSERTING into BAHAR.MEMBERS
SET DEFINE OFF;
Insert into BAHAR.MEMBERS (ID,FIRST_NAME,LAST_NAME,USERNAME,EMAIL,PASSWORD,DESIGNATION,ADDRESS,PHONE,ROLE) values (144,'Md. Habibullah','bahar611@yahoo.com','bahar61119','bahar61119@yahoo.com','e10adc3949ba59abbe56e057f20f883e','Student','Sher-E-Bangla, Hall, Buet','01553418874','ADMIN');
Insert into BAHAR.MEMBERS (ID,FIRST_NAME,LAST_NAME,USERNAME,EMAIL,PASSWORD,DESIGNATION,ADDRESS,PHONE,ROLE) values (482,'Rifat Sabbir','Mansur','rifat56','zaquesvb@gmail.com','e10adc3949ba59abbe56e057f20f883e','Student','BUET, Dhaka','23479238974','ADMIN');
REM INSERTING into BAHAR.MSC_BASIC_INFO
SET DEFINE OFF;
Insert into BAHAR.MSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100427,'PhD','sdfs','adfsfasdf','no',120,110,'Percentage of Marks',2009,to_date('01-JAN-06','DD-MON-RR'),to_date('07-JUN-13','DD-MON-RR'),2,'CSE','PENDING');
Insert into BAHAR.MSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100402,'PhD','BUET','M.Sc. Engg. in ICT','no',124,124,'Percentage of Marks',2010,to_date('03-JUN-13','DD-MON-RR'),to_date('07-JUN-13','DD-MON-RR'),3,'CSE','PENDING');
Insert into BAHAR.MSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100426,'PhD','East West University','M.Sc. in CSE','no',90,90,'Percentage of Marks',2008,to_date('01-JAN-06','DD-MON-RR'),to_date('16-OCT-08','DD-MON-RR'),4,'CSE','PENDING');
Insert into BAHAR.MSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100425,'PhD','Brack','M.Sc. in CSE','no',80,80,'CGPA',2008,to_date('03-JUN-13','DD-MON-RR'),to_date('16-OCT-08','DD-MON-RR'),2,'CSE','PENDING');
Insert into BAHAR.MSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100424,'PhD','DU','CSE','no',80,54,'CGPA',2005,to_date('03-JUN-02','DD-MON-RR'),to_date('17-FEB-04','DD-MON-RR'),2,'CSE','PENDING');
Insert into BAHAR.MSC_BASIC_INFO (ID,APPLICANT_SERIAL,PROGRAM,CER_DEG_OBT_FROM,DEGREE_NAME,CREDIT_TRANSFER,CREDIT_EARNED,CRE_EARN_WITHOUT_EXEMPTION,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (1,100423,'PhD','DU','CSE','no',124,120,'CGPA',2004,to_date('03-JUN-13','DD-MON-RR'),to_date('19-OCT-05','DD-MON-RR'),2,'CSE','PPENDING');
REM INSERTING into BAHAR.MSC_CGPA
SET DEFINE OFF;
Insert into BAHAR.MSC_CGPA (APPLICANT_SERIAL,PROGRAM,MSC_ID,CGPA,CGPA_AB_2_7_5,CGPA_SCALE) values (100424,'PhD',1,3.78,'yes',4);
Insert into BAHAR.MSC_CGPA (APPLICANT_SERIAL,PROGRAM,MSC_ID,CGPA,CGPA_AB_2_7_5,CGPA_SCALE) values (100423,'PhD',1,3.56,'yes',4);
Insert into BAHAR.MSC_CGPA (APPLICANT_SERIAL,PROGRAM,MSC_ID,CGPA,CGPA_AB_2_7_5,CGPA_SCALE) values (100425,'PhD',1,3.9,'yes',4);
REM INSERTING into BAHAR.MSC_DOCUMENT
SET DEFINE OFF;
Insert into BAHAR.MSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,MSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100402,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.MSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,MSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100427,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.MSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,MSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100426,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.MSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,MSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100423,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.MSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,MSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100424,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
Insert into BAHAR.MSC_DOCUMENT (APPLICANT_SERIAL,PROGRAM,MSC_ID,TRANSCRIPT,CERTIFICATE,TESTIMONIAL,TESTIMONIAL_AUTHORIZED_PERSON) values (100425,'PhD',1,'PENDING','PENDING','PENDING','PENDING');
REM INSERTING into BAHAR.MSC_MARKS
SET DEFINE OFF;
Insert into BAHAR.MSC_MARKS (APPLICANT_SERIAL,PROGRAM,MSC_ID,PER_MARKS,MARKS_AB_55_PER,TOTAL_MARKS) values (100402,'PhD',1,45,'no',1100);
Insert into BAHAR.MSC_MARKS (APPLICANT_SERIAL,PROGRAM,MSC_ID,PER_MARKS,MARKS_AB_55_PER,TOTAL_MARKS) values (100427,'PhD',1,85,'yes',1100);
Insert into BAHAR.MSC_MARKS (APPLICANT_SERIAL,PROGRAM,MSC_ID,PER_MARKS,MARKS_AB_55_PER,TOTAL_MARKS) values (100426,'PhD',1,75,'yes',1100);
REM INSERTING into BAHAR.PHONE
SET DEFINE OFF;
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100375,'01917095537',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100367,'01552355905',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100368,'01730310494',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100362,'01917382001',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100363,'01911048007',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100377,'+8801717406554',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100376,'01714384250',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100380,'+01190089909',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100402,'01840994895',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100383,'01723135095',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100363,'01912458564',2);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100424,'01552202746',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100422,'01711953595',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100423,'01712167639',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100425,'01711152240',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100426,'01756336733',1);
Insert into BAHAR.PHONE (APPLICANT_SERIAL,PHONE_NUM,ID) values (100427,'1254879789',1);
REM INSERTING into BAHAR.PHOTO
SET DEFINE OFF;
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100362,'100362.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100367,'100367.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100363,'100363.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100368,'100368.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100375,'100375.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100376,'100376.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100377,'100377.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100380,'100380.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100383,'100383.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100402,'100402.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100422,'100422.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100423,'100423.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100424,'100424.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100425,'100425.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100426,'100426.jpg');
Insert into BAHAR.PHOTO (APPLICANT_SERIAL,FILE_NAME) values (100427,'100427.jpg');
REM INSERTING into BAHAR.PRE_ADMISSION
SET DEFINE OFF;
REM INSERTING into BAHAR.REFERENCE
SET DEFINE OFF;
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100362,'Dr. Md. Nasim Akhtar','Associate Professor Department of CSE DUET, Gazipur-1700','01711395537',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100363,'Prof. Mozammel Huq Azad Khan','&quot;East West University
Aftabnagar, Dhaka-1212
Bangladesh&quot;','096667755',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100363,'Dr. Md. Abu Asraf','&quot;East West University
Aftabnagar, Dhaka-1212
Bangladesh&quot;','01680796274',2);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100368,'Dr. Abul L. Haque, Professor, EECS Dept.','&quot;North South University
contact: 8852016,ext 1501
ahaque@northsouth.edu&quot;','01715024489',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100367,'Partho Sarothi Shaha','&quot;System Analyst
R A K Ceramics (BD) PVT. 
R A K Tower&quot;','01713018708',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100367,'Kazi Ashiqure Rahman','&quot;Manager, Education Dept.
IBCS-PRIMAX Software (BD)
H# 44, R#13A, Dhaka&quot;','01713397559',2);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100375,'Dr. Abul L. Haque, Professor, EECS Dept.','FHFGHDF','4645646455',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100376,'Md. Shahidul Islam','&quot;Assistant Professor
CSE department
Shahjalal University&quot;','01913379947',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100376,'Md. Tarikul Islam Sarkar','&quot;Senior Software engineer
Eyeball Networks
Dhaka ,Bangladesh&quot;','01765333623',2);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100377,'Dr. Md. Mahbub Hasan','Rajshahi 6205, Bangladesh','01710998658',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100402,'Dr. Satya Prasad Majumder','&quot;Professor
Dept. of EEE
BUET, Dhaka&quot;','01552376187',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100402,'Dr. Mohammad Mahfuzul Islam','&quot;Professor
Dept. of CSE
BUET, Dhaka&quot;','01913071907',2);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100380,'MD. SAIFUR RAHMAN, (Assistant Professor)','&quot;DEPT. OF CSE, BUBT
Plot # 77-78 Road # 9, 
RUPNAGAR R/A, MIRPUR&quot;','01819190259',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100383,'MD. Delower Hossain or)','Land Port Authority','01819133283',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100423,'Professor Dr. Md. Shafiqul Islam','&quot;Dept of EEE, BUET
Dhaka-1000
islams@eee.buet.ac.bd&quot;','0181500775985',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100424,'Prof. Dr. M A Awal, Chairman, EECS Department','&quot;North South University
Bashundhara, Dhaka-1229&quot;','01711535160',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100422,'Dr. M. A. Kashem.(Assoc. Professor,Dept. of CSE)','&quot;Dhaka University 
of Engineering &amp; 
Technology,Gazipur-1700&quot;','01199117213',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100425,'Dr. Mohammad Mahfuzul Islam','&quot;Professor
Department of CSE
BUET&quot;','01756622043',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100426,'Dr. Mohammad Huq Azad Khan','&quot;Chairperson and Professor
Dept of CSE,East West Uni
43 Mohakhali C/A, Dhaka.&quot;','8801720267426',1);
Insert into BAHAR.REFERENCE (APPLICANT_SERIAL,REF_NAME,REF_ADDRESS,REF_MOBILE,ID) values (100426,'Dr. Mohammad Shorif Uddin','&quot;Professor, Dept of CSE.
Jahangirnagar University
Savar, Dhaka-1342.&quot;','01552471751',2);
REM INSERTING into BAHAR.SEARCH_QUERY
SET DEFINE OFF;
Insert into BAHAR.SEARCH_QUERY (ID,QUERY) values (485,'search=&amp;category=ADMISSION_TEST');
REM INSERTING into BAHAR.SECONDARY
SET DEFINE OFF;
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100362,'Chandina Pilot High School, BTEB','SSC','Technical','GPA',2002,to_date('02-JAN-00','DD-MON-RR'),to_date('15-MAR-02','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100367,'Rajuk School And College','SSC','DHAKA','GPA',1995,to_date('02-JUN-13','DD-MON-RR'),to_date('04-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100363,'Govt laboratory High School','SSC','DHAKA','PERECNTAGE_MARKS',1992,to_date('02-FEB-99','DD-MON-RR'),to_date('06-MAR-99','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100368,'A Rob Secondary School','SSC','DHAKA','GPA',2007,to_date('03-JUN-13','DD-MON-RR'),to_date('08-MAY-13','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100375,'Rajuk School And College','SSC','BARISAL','PERECNTAGE_MARKS',1995,to_date('03-JUN-13','DD-MON-RR'),to_date('05-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100376,'Rajuk School And College','SSC','BARISAL','GPA',2002,to_date('22-MAY-13','DD-MON-RR'),to_date('03-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100377,'V.J Govt. High School, Chuadanga','SSC','DHAKA','GPA',2005,to_date('11-APR-13','DD-MON-RR'),to_date('06-JUN-13','DD-MON-RR'),2,'ARTS','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100380,'Rajuk School And College','SSC','DHAKA','GPA',2005,to_date('11-APR-13','DD-MON-RR'),to_date('06-JUN-13','DD-MON-RR'),2,'ARTS','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100383,'Rajuk School And College','SSC','DHAKA','GPA',2005,to_date('11-APR-13','DD-MON-RR'),to_date('06-JUN-13','DD-MON-RR'),2,'ARTS','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100402,'Dhanmondi Govt. Girls High School, Dhaka','SSC','DHAKA','PERECNTAGE_MARKS',1996,to_date('01-JAN-94','DD-MON-RR'),to_date('06-JUL-96','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100422,'RAJSHAHI SCHOOL','SSC','RAJSHAHI','GPA',2002,to_date('01-JAN-00','DD-MON-RR'),to_date('31-DEC-01','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100423,'RAJSHAHI SCHOOL','SSC','RAJSHAHI','PERECNTAGE_MARKS',1995,to_date('01-JAN-94','DD-MON-RR'),to_date('31-DEC-95','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100424,'Patuakhali Govt Jubilee High School','SSC','CUMILLA','PERECNTAGE_MARKS',1995,to_date('01-JAN-94','DD-MON-RR'),to_date('02-AUG-95','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100425,'Rajuk School And College','SSC','DHAKA','PERECNTAGE_MARKS',1999,to_date('01-JAN-97','DD-MON-RR'),to_date('30-JUN-96','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100426,'Monipur High school','SSC','DHAKA','PERECNTAGE_MARKS',1998,to_date('01-JAN-97','DD-MON-RR'),to_date('01-APR-98','DD-MON-RR'),2,'SCIENCE','PENDING');
Insert into BAHAR.SECONDARY (APPLICANT_SERIAL,CER_DEG_OBT_FROM,DEGREE_NAME,BOARD,GRADE_SYSTEM,PASSING_YEAR,DURATION_FROM,DURATION_TO,DURATION_OF_DEGREE,MAJOR_FIELD_SPECIALIZATION,CMT_EQUIVALENCE_COMMITTEE) values (100427,'Rajuk School And College','SSC','DHAKA','GPA',2007,to_date('02-JUN-13','DD-MON-RR'),to_date('02-JUN-13','DD-MON-RR'),2,'SCIENCE','PENDING');
REM INSERTING into BAHAR.SECONDARY_DOCUMENT
SET DEFINE OFF;
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100362,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100367,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100363,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100368,'no','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100375,'yes','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100376,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100377,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100380,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100383,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100402,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100422,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100423,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100424,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100425,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100426,'PENDING','PENDING');
Insert into BAHAR.SECONDARY_DOCUMENT (APPLICANT_SERIAL,TRANSCRIPT,CERTIFICATE) values (100427,'PENDING','PENDING');
REM INSERTING into BAHAR.SECONDARY_GPA
SET DEFINE OFF;
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100368,1.45,'no','yes',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100362,4.45,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100367,5,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100376,4.95,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100377,4.5,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100380,4.5,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100383,4.5,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100422,4.63,'yes','no',5);
Insert into BAHAR.SECONDARY_GPA (APPLICANT_SERIAL,GPA,GPA_AB_3_5,GPA_LESS_2,GPA_SCALE) values (100427,5,'yes','no',5);
REM INSERTING into BAHAR.SECONDARY_MARKS
SET DEFINE OFF;
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100402,78.5,'yes','no',1000);
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100363,75,'yes','no',1000);
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100375,99,'yes','no',1200);
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100423,77,'yes','no',1000);
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100424,85.5,'yes','no',1000);
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100425,75.3,'yes','no',1000);
Insert into BAHAR.SECONDARY_MARKS (APPLICANT_SERIAL,PER_MARKS,FIRST_DIV,THIRD_DIV,TOTAL_MARKS) values (100426,75.6,'yes','no',1000);
REM INSERTING into BAHAR.STUDENT_CONTACT_INFO
SET DEFINE OFF;
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100363,'&quot;341/1 East kazipara(3rd floor),R-6,Mirpur
Dhaka-1216&quot;','&quot;341/1 East kazipara(3rd floor),R-6,Mirpur
Dhaka-1216
&quot;','anis019173@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100362,'C/O: Md. Mizanur Rahman, Jr Officer (IT) Card department, 8th floor, Head Office, 26 , Dilkusha Commercial Area, Dhaka-1000','C/O: Md. Jainal Abedin Vill.+Post office: Maricha,Upazila: Debidwar District: Comilla','anis01917382001@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100375,'SDFSDFASFD','ASDFFASFSADF','mofizul048@gmail.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100367,'FLAT # 2A; 15/3 NORTH TOLARBAG; MIRPUR; DHAKA-1216','&quot;VILL.-BAYNNA; P.O.-PUKHORIA; P.S.-GHIOR;
DIST.-MANIKGONJ&quot;','nur_alam1986@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100368,'&quot;24/2 Tatkhana Lane (3rd floor), Nazimuddin Road
PS. Chowk Bazar, Dhaka 1000.&quot;','1/A Abdul Hadi Lane, PS. Bongshal, Dhaka 1000.','anis01917382001@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100377,'55/B, East Raza Bazar(5th Floor),Dhaka.','Thana Para, Alamdanga, Chuadanga.','baharcse09@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100376,'15/1,West Kandapara,Sadar road ,Narsingdi','15/1,West Kandapara,Sadar road ,Narsingdi','baharcse09@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100380,'55/B, East Raza Bazar(5th Floor),Dhak.','Thana Para, Aladanga, Chuadanga.','mofizul048@gmail.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100424,'11/7-C Mirbagh (1st Floor), Dhaka-1217','Vill+Post: Dhansagor, PS: Morelgonj, Dis: Bagerhat','kamal_nub@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100383,'55/B, East Raza Bazar(5th Floor),Dhak.','Thana Para, Aladanga, Chuadanga.','mofizul048@gmail.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100402,'&quot;84/A Hazi Afsaruddin Road
15 Dhanmondi, Dhaka 1209&quot;','&quot;84/A Hazi Afsaruddin Road
15 Dhanmondi, Dhaka 1209
&quot;','tamannacse@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100422,'&quot;C/O: Lohani Maksudar Rahman
House#14,Road#14,Sector#11
Uttara,Dhaka-1230&quot;','&quot;S/O: Md.Rafiqul Islam
House#214,Road#4,Ward#26,Vill.-Nurpur,
Thana-Kotwali,Post.-Alamnagar,Dist.-Rangpur&quot;','shuvo.rezwan@gmail.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100423,'&quot;Uttara University 
Dept of CSE, House- 4 &amp; 5, Road- 15
Sector- 6, Uttara, Dhaka 1230&quot;','&quot;Chowdhury Bari (Opposite to Telephone Office)
Shanti Nagar, College Road
Post office &amp; District: NILPHAMARI&quot;','shafiul05@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100425,'280, Ahmed Nagar, Paikpara, Mirpur-	1, Dhaka-1216.','280, Ahmed Nagar, Paikpara, Mirpur-1, Dhaka-1216.','jehadbd@gmail.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100426,'1063/4, East Monipur, Mirpur-10,Dhaka-1216.','1063/4, East Monipur, Mirpur-10,Dhaka-1216.','r.khanom@yahoo.com');
Insert into BAHAR.STUDENT_CONTACT_INFO (APPLICANT_SERIAL,PRESENT_ADDRESS,PERMAMENT_ADDRESS,EMAIL) values (100427,'sdfsf','sfsfsfsdf','sd@sdfg.com');
REM INSERTING into BAHAR.STUDENT_PERSONAL_INFO
SET DEFINE OFF;
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100363,'Tariqul Anis','Md Abdus Sattar Khan','Monowara Sultana',to_date('19-JAN-84','DD-MON-RR'),'Dhaka','Male','Single','Bangladeshi','Islam');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100375,'Nazia Hasan','Mahmudul Hasan','Nasim Akhtar',to_date('14-JUL-87','DD-MON-RR'),'Dhaka','Female','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100362,'Md. Anisur Rahman','Md. Jainal Abedin','Mrs. Shirina Akter',to_date('14-SEP-86','DD-MON-RR'),'Comilla','Male','Single','Bangladeshi','Islam');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100367,'MD. NUR-A-ALAM','MD. ABDUS SATTAR','NAZMA BEGAM',to_date('05-JAN-86','DD-MON-RR'),'MANIKGONJ','Male','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100368,'Muhammad Imran Khan','Md. Ashrafuddin Khan','Sultana Rahman',to_date('17-MAY-80','DD-MON-RR'),'BHOLA','Male','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100377,'Md. Rezwan Hasan','Md. Abu Hasan','Nasima Shamim',to_date('22-JAN-92','DD-MON-RR'),'Comilla','Male','Married','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100376,'Fahad Ahmed','Najib Ahmed','Lutfe Ara Begum',to_date('22-OCT-89','DD-MON-RR'),'Narsingdi,Bangladesh','Male','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100380,'MD. NAZMUL HUDA MASUD','MD. SHAMSUL HUDA','MONOWARA HUDA',to_date('15-JAN-92','DD-MON-RR'),'Comilla','Male','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100422,'Md. Rezwan-Ul-Islam','Md. Rafiqul Islam','Hoshne-Ara-Islam',to_date('27-JAN-88','DD-MON-RR'),'Rangpur,Bangladesh','Male','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100383,'Sohana Ferdousi','Md. Abdus Salam','Mrs. Sufia Khatun',to_date('24-DEC-89','DD-MON-RR'),'BHOLA','Female','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100402,'Tamanna Haque Nipa','Mohammad Moizzul Haque','Shariyatun-Nessa',to_date('30-AUG-81','DD-MON-RR'),'Dhaka','Female','Married','Bangladeshi','Islam');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100423,'MD. SHAFIUL ALAM CHOWDHURY','Al-Haj Abdul Khaleque Chowdhury','Sultana Shamsunnahar',to_date('04-NOV-79','DD-MON-RR'),'NILPHAMARI','Male','Married','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100424,'Mohammad Kamal Hossain Foraji','Mohammad Moslem Ali Foraji','Aleya Begum',to_date('12-SEP-81','DD-MON-RR'),'Dhansagor','Male','Married','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100425,'Abdur Rahman Khan Jehad','Mohammad Nurul Islam Khan','Fatema Khayrun Nessa',to_date('07-JAN-85','DD-MON-RR'),'Dhaka','Male','Single','BANGLADESHI','ISLAM');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100426,'Rashida Khanom','Md. Nurul Islam','Jahanara Islam',to_date('01-JAN-84','DD-MON-RR'),'Pirojpur','Female','Married','Bangladeshi','Islam');
Insert into BAHAR.STUDENT_PERSONAL_INFO (APPLICANT_SERIAL,APPLICANT_NAME,FATHER_NAME,MOTHER_NAME,BIRTH_DATE,BIRTH_PLACE,SEX,MARITAL_STATUS,NATIONALITY,RELIGION) values (100427,'asdfsafsd','asdfsafasf','asdfsafasfasfs',to_date('12-DEC-91','DD-MON-RR'),'BHOLA','Male','Single','fdsdfsfsdsd','dssdfsf');
--------------------------------------------------------
--  DDL for Index STUDENT_PERSONAL_INFO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."STUDENT_PERSONAL_INFO_PK" ON "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SSC_MARKS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."SSC_MARKS_UK1" ON "BAHAR"."SECONDARY_MARKS" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HIGHER_SECONDARY_DOCUMENT_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."HIGHER_SECONDARY_DOCUMENT_UK1" ON "BAHAR"."HIGHER_SECONDARY_DOCUMENT" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index STUDENT_CONTACT_INFO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."STUDENT_CONTACT_INFO_UK1" ON "BAHAR"."STUDENT_CONTACT_INFO" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SSC_GPA_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."SSC_GPA_UK1" ON "BAHAR"."SECONDARY_GPA" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PHONE_UK2
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."PHONE_UK2" ON "BAHAR"."PHONE" ("APPLICANT_SERIAL", "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MSC_CGPA_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MSC_CGPA_UK1" ON "BAHAR"."MSC_CGPA" ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SECONDARY_DOCUMENT_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."SECONDARY_DOCUMENT_UK1" ON "BAHAR"."SECONDARY_DOCUMENT" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ELIGIBILITY_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."ELIGIBILITY_UK1" ON "BAHAR"."ELIGIBILITY" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PRE_ADMISSION_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."PRE_ADMISSION_UK1" ON "BAHAR"."PRE_ADMISSION" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BSC_BASIC_INFO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."BSC_BASIC_INFO_UK1" ON "BAHAR"."BSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BSC_CGPA_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."BSC_CGPA_UK1" ON "BAHAR"."BSC_CGPA" ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEMBERS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MEMBERS_UK1" ON "BAHAR"."MEMBERS" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SEARCH_QUERY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."SEARCH_QUERY_PK" ON "BAHAR"."SEARCH_QUERY" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index REFERENCE_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."REFERENCE_UK1" ON "BAHAR"."REFERENCE" ("APPLICANT_SERIAL", "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PHONE_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."PHONE_UK1" ON "BAHAR"."PHONE" ("PHONE_NUM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index EMPLOYEE_STATUS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."EMPLOYEE_STATUS_UK1" ON "BAHAR"."EMPLOYEE_STATUS" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BSC_DOCUMENT_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."BSC_DOCUMENT_UK1" ON "BAHAR"."BSC_DOCUMENT" ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index DOCUMENT_INFO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."DOCUMENT_INFO_UK1" ON "BAHAR"."DOCUMENT_INFO" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEMBERS_UK2
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MEMBERS_UK2" ON "BAHAR"."MEMBERS" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HIGHER_SECONDARY_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."HIGHER_SECONDARY_UK1" ON "BAHAR"."HIGHER_SECONDARY" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CURRENT_ADMISSION_INFO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."CURRENT_ADMISSION_INFO_UK1" ON "BAHAR"."CURRENT_ADMISSION_INFO" ("APPLICANT_SERIAL", "PROGRAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PHOTO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."PHOTO_UK1" ON "BAHAR"."PHOTO" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index JOB_EXP_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."JOB_EXP_UK1" ON "BAHAR"."JOB_EXP" ("APPLICANT_SERIAL", "ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index STUDENT_PERSONAL_INFO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."STUDENT_PERSONAL_INFO_UK1" ON "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_NAME", "FATHER_NAME", "MOTHER_NAME", "BIRTH_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BSC_MARKS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."BSC_MARKS_UK1" ON "BAHAR"."BSC_MARKS" ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HSC_MARKS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."HSC_MARKS_UK1" ON "BAHAR"."HIGHER_SECONDARY_MARKS" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MSC_BASIC_INFO_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MSC_BASIC_INFO_UK1" ON "BAHAR"."MSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index ADMISSION_TEST_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."ADMISSION_TEST_UK1" ON "BAHAR"."ADMISSION_TEST" ("APPLICANT_SERIAL", "PROGRAM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index HSC_GPA_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."HSC_GPA_UK1" ON "BAHAR"."HIGHER_SECONDARY_GPA" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MEMBERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MEMBERS_PK" ON "BAHAR"."MEMBERS" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BUET_GRATUDE_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."BUET_GRATUDE_UK1" ON "BAHAR"."BUET_GRATUDE" ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MSC_DOCUMENT_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MSC_DOCUMENT_UK1" ON "BAHAR"."MSC_DOCUMENT" ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index INELIGIBILITY_INDEX1
--------------------------------------------------------

  CREATE INDEX "BAHAR"."INELIGIBILITY_INDEX1" ON "BAHAR"."INELIGIBILITY" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index SECONDARY_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."SECONDARY_UK1" ON "BAHAR"."SECONDARY" ("APPLICANT_SERIAL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index MSC_MARKS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."MSC_MARKS_UK1" ON "BAHAR"."MSC_MARKS" ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index BUET_MASTERS_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "BAHAR"."BUET_MASTERS_UK1" ON "BAHAR"."BUET_MASTERS" ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  Constraints for Table STUDENT_PERSONAL_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" ADD CONSTRAINT "STUDENT_PERSONAL_INFO_UK1" UNIQUE ("APPLICANT_NAME", "FATHER_NAME", "MOTHER_NAME", "BIRTH_DATE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" ADD CONSTRAINT "STUDENT_PERSONAL_INFO_PK" PRIMARY KEY ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("RELIGION" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("NATIONALITY" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("MARITAL_STATUS" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("SEX" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("BIRTH_PLACE" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("BIRTH_DATE" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("MOTHER_NAME" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("FATHER_NAME" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("APPLICANT_NAME" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."STUDENT_PERSONAL_INFO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRE_ADMISSION
--------------------------------------------------------

  ALTER TABLE "BAHAR"."PRE_ADMISSION" ADD CONSTRAINT "PRE_ADMISSION_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."PRE_ADMISSION" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."PRE_ADMISSION" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table REFERENCE
--------------------------------------------------------

  ALTER TABLE "BAHAR"."REFERENCE" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."REFERENCE" ADD CONSTRAINT "REFERENCE_UK1" UNIQUE ("APPLICANT_SERIAL", "ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."REFERENCE" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SECONDARY_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY_DOCUMENT" ADD CONSTRAINT "SECONDARY_DOCUMENT_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."SECONDARY_DOCUMENT" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BSC_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_DOCUMENT" ADD CONSTRAINT "BSC_DOCUMENT_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."BSC_DOCUMENT" MODIFY ("BSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_DOCUMENT" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_DOCUMENT" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CURRENT_ADMISSION_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."CURRENT_ADMISSION_INFO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."CURRENT_ADMISSION_INFO" ADD CONSTRAINT "CURRENT_ADMISSION_INFO_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MSC_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_MARKS" ADD CONSTRAINT "MSC_MARKS_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MSC_MARKS" MODIFY ("MSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_MARKS" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_MARKS" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BUET_MASTERS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BUET_MASTERS" ADD CONSTRAINT "BUET_MASTERS_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."BUET_MASTERS" MODIFY ("MSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BUET_MASTERS" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BUET_MASTERS" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table COMMENT_ON
--------------------------------------------------------

  ALTER TABLE "BAHAR"."COMMENT_ON" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BSC_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_MARKS" MODIFY ("BSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_MARKS" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_MARKS" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_MARKS" ADD CONSTRAINT "BSC_MARKS_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EMPLOYEE_STATUS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."EMPLOYEE_STATUS" ADD CONSTRAINT "EMPLOYEE_STATUS_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."EMPLOYEE_STATUS" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SECONDARY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY" ADD CONSTRAINT "SECONDARY_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."SECONDARY" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSC_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_DOCUMENT" ADD CONSTRAINT "MSC_DOCUMENT_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MSC_DOCUMENT" MODIFY ("MSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_DOCUMENT" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_DOCUMENT" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ELIGIBILITY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."ELIGIBILITY" ADD CONSTRAINT "ELIGIBILITY_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."ELIGIBILITY" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HIGHER_SECONDARY_GPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_GPA" ADD CONSTRAINT "HSC_GPA_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_GPA" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PHONE
--------------------------------------------------------

  ALTER TABLE "BAHAR"."PHONE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."PHONE" ADD CONSTRAINT "PHONE_UK2" UNIQUE ("APPLICANT_SERIAL", "ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."PHONE" ADD CONSTRAINT "PHONE_UK1" UNIQUE ("PHONE_NUM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HIGHER_SECONDARY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY" ADD CONSTRAINT "HIGHER_SECONDARY_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."HIGHER_SECONDARY" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SEARCH_QUERY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SEARCH_QUERY" ADD CONSTRAINT "SEARCH_QUERY_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."SEARCH_QUERY" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSC_BASIC_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_BASIC_INFO" ADD CONSTRAINT "MSC_BASIC_INFO_UK1" UNIQUE ("ID", "APPLICANT_SERIAL", "PROGRAM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MSC_BASIC_INFO" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_BASIC_INFO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_BASIC_INFO" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table STUDENT_CONTACT_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."STUDENT_CONTACT_INFO" ADD CONSTRAINT "STUDENT_CONTACT_INFO_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."STUDENT_CONTACT_INFO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BSC_CGPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_CGPA" ADD CONSTRAINT "BSC_CGPA_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."BSC_CGPA" MODIFY ("BSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_CGPA" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_CGPA" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BSC_BASIC_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_BASIC_INFO" ADD CONSTRAINT "BSC_BASIC_INFO_UK1" UNIQUE ("ID", "APPLICANT_SERIAL", "PROGRAM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."BSC_BASIC_INFO" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_BASIC_INFO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BSC_BASIC_INFO" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INELIGIBILITY_DOC
--------------------------------------------------------

  ALTER TABLE "BAHAR"."INELIGIBILITY_DOC" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MSC_CGPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_CGPA" ADD CONSTRAINT "MSC_CGPA_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "MSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MSC_CGPA" MODIFY ("MSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_CGPA" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."MSC_CGPA" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PHOTO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."PHOTO" ADD CONSTRAINT "PHOTO_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."PHOTO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DOCUMENT_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."DOCUMENT_INFO" ADD CONSTRAINT "DOCUMENT_INFO_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."DOCUMENT_INFO" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BUET_GRATUDE
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BUET_GRATUDE" ADD CONSTRAINT "BUET_GRATUDE_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM", "BSC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."BUET_GRATUDE" MODIFY ("BSC_ID" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BUET_GRATUDE" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."BUET_GRATUDE" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MEMBERS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MEMBERS" ADD CONSTRAINT "MEMBERS_UK2" UNIQUE ("EMAIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MEMBERS" ADD CONSTRAINT "MEMBERS_UK1" UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MEMBERS" ADD CONSTRAINT "MEMBERS_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."MEMBERS" MODIFY ("ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SECONDARY_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY_MARKS" ADD CONSTRAINT "SSC_MARKS_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."SECONDARY_MARKS" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ADMISSION_TEST
--------------------------------------------------------

  ALTER TABLE "BAHAR"."ADMISSION_TEST" ADD CONSTRAINT "ADMISSION_TEST_UK1" UNIQUE ("APPLICANT_SERIAL", "PROGRAM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."ADMISSION_TEST" MODIFY ("PROGRAM" NOT NULL ENABLE);
  ALTER TABLE "BAHAR"."ADMISSION_TEST" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HIGHER_SECONDARY_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_MARKS" ADD CONSTRAINT "HSC_MARKS_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_MARKS" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INELIGIBILITY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."INELIGIBILITY" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HIGHER_SECONDARY_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_DOCUMENT" ADD CONSTRAINT "HIGHER_SECONDARY_DOCUMENT_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_DOCUMENT" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SECONDARY_GPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY_GPA" ADD CONSTRAINT "SSC_GPA_UK1" UNIQUE ("APPLICANT_SERIAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."SECONDARY_GPA" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table JOB_EXP
--------------------------------------------------------

  ALTER TABLE "BAHAR"."JOB_EXP" ADD CONSTRAINT "JOB_EXP_UK1" UNIQUE ("APPLICANT_SERIAL", "ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "BAHAR"."JOB_EXP" MODIFY ("APPLICANT_SERIAL" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table ADMISSION_TEST
--------------------------------------------------------

  ALTER TABLE "BAHAR"."ADMISSION_TEST" ADD CONSTRAINT "ADMISSION_TEST_CURRENT_AD_FK1" FOREIGN KEY ("APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."CURRENT_ADMISSION_INFO" ("APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BSC_BASIC_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_BASIC_INFO" ADD CONSTRAINT "BSC_BASIC_INFO_CURRENT_AD_FK1" FOREIGN KEY ("APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."CURRENT_ADMISSION_INFO" ("APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BSC_CGPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_CGPA" ADD CONSTRAINT "BSC_CGPA_BSC_BASIC_INFO_FK1" FOREIGN KEY ("BSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."BSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BSC_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_DOCUMENT" ADD CONSTRAINT "BSC_DOCUMENT_BSC_BASIC_IN_FK1" FOREIGN KEY ("BSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."BSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BSC_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BSC_MARKS" ADD CONSTRAINT "BSC_MARKS_STUDENT_PERSONA_FK1" FOREIGN KEY ("BSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."BSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BUET_GRATUDE
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BUET_GRATUDE" ADD CONSTRAINT "BUET_GRATUDE_BSC_BASIC_IN_FK1" FOREIGN KEY ("BSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."BSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BUET_MASTERS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."BUET_MASTERS" ADD CONSTRAINT "BUET_MASTERS_MSC_BASIC_IN_FK1" FOREIGN KEY ("MSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."MSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CURRENT_ADMISSION_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."CURRENT_ADMISSION_INFO" ADD CONSTRAINT "CURRENT_ADMISSION_INFO_ST_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DOCUMENT_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."DOCUMENT_INFO" ADD CONSTRAINT "DOCUMENT_INFO_STUDENT_PER_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ELIGIBILITY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."ELIGIBILITY" ADD CONSTRAINT "ELIGIBILITY_STUDENT_PERSO_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EMPLOYEE_STATUS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."EMPLOYEE_STATUS" ADD CONSTRAINT "EMPLOYEE_STATUS_STUDENT_P_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HIGHER_SECONDARY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY" ADD CONSTRAINT "HIGHER_SECONDARY_STUDENT__FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HIGHER_SECONDARY_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_DOCUMENT" ADD CONSTRAINT "HIGHER_SECONDARY_DOCUMENT_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."HIGHER_SECONDARY" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HIGHER_SECONDARY_GPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_GPA" ADD CONSTRAINT "HSC_GPA_STUDENT_PERSONAL__FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."HIGHER_SECONDARY" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HIGHER_SECONDARY_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."HIGHER_SECONDARY_MARKS" ADD CONSTRAINT "HSC_MARKS_STUDENT_PERSONA_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."HIGHER_SECONDARY" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table INELIGIBILITY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."INELIGIBILITY" ADD CONSTRAINT "INELIGIBILITY_STUDENT_PER_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table JOB_EXP
--------------------------------------------------------

  ALTER TABLE "BAHAR"."JOB_EXP" ADD CONSTRAINT "JOB_EXP_STUDENT_PERSONAL__FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSC_BASIC_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_BASIC_INFO" ADD CONSTRAINT "MSC_BASIC_INFO_CURRENT_AD_FK1" FOREIGN KEY ("APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."CURRENT_ADMISSION_INFO" ("APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSC_CGPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_CGPA" ADD CONSTRAINT "MSC_CGPA_MSC_BASIC_INFO_FK1" FOREIGN KEY ("MSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."MSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSC_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_DOCUMENT" ADD CONSTRAINT "MSC_DOCUMENT_MSC_BASIC_IN_FK1" FOREIGN KEY ("MSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."MSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MSC_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."MSC_MARKS" ADD CONSTRAINT "MSC_MARKS_MSC_BASIC_INFO_FK1" FOREIGN KEY ("MSC_ID", "APPLICANT_SERIAL", "PROGRAM")
	  REFERENCES "BAHAR"."MSC_BASIC_INFO" ("ID", "APPLICANT_SERIAL", "PROGRAM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHONE
--------------------------------------------------------

  ALTER TABLE "BAHAR"."PHONE" ADD CONSTRAINT "PHONE_STUDENT_PERSONAL_IN_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PHOTO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."PHOTO" ADD CONSTRAINT "PHOTO_STUDENT_PERSONAL_IN_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRE_ADMISSION
--------------------------------------------------------

  ALTER TABLE "BAHAR"."PRE_ADMISSION" ADD CONSTRAINT "PRE_ADMISSION_STUDENT_PER_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table REFERENCE
--------------------------------------------------------

  ALTER TABLE "BAHAR"."REFERENCE" ADD CONSTRAINT "REFERENCE_STUDENT_PERSONA_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SECONDARY
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY" ADD CONSTRAINT "SECONDARY_STUDENT_PERSONA_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SECONDARY_DOCUMENT
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY_DOCUMENT" ADD CONSTRAINT "SECONDARY_DOCUMENT_STUDEN_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."SECONDARY" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SECONDARY_GPA
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY_GPA" ADD CONSTRAINT "SSC_GPA_STUDENT_PERSONAL__FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."SECONDARY" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SECONDARY_MARKS
--------------------------------------------------------

  ALTER TABLE "BAHAR"."SECONDARY_MARKS" ADD CONSTRAINT "SSC_MARKS_STUDENT_PERSONA_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."SECONDARY" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STUDENT_CONTACT_INFO
--------------------------------------------------------

  ALTER TABLE "BAHAR"."STUDENT_CONTACT_INFO" ADD CONSTRAINT "STUDENT_CONTACT_INFO_STUD_FK1" FOREIGN KEY ("APPLICANT_SERIAL")
	  REFERENCES "BAHAR"."STUDENT_PERSONAL_INFO" ("APPLICANT_SERIAL") ENABLE;
--------------------------------------------------------
--  DDL for Trigger AUTO_INC_SEARCH_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."AUTO_INC_SEARCH_TRI" 
before insert on SEARCH_QUERY
for each row
begin
select auto_inc.nextval into :new.id from dual;
end;
/
ALTER TRIGGER "BAHAR"."AUTO_INC_SEARCH_TRI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger AUTO_INC_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."AUTO_INC_TRI" 
before insert on members
for each row
begin
select auto_inc.nextval into :new.id from dual;
end;
/
ALTER TRIGGER "BAHAR"."AUTO_INC_TRI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BSC_BASIC_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."BSC_BASIC_ELIG" 
BEFORE INSERT OR UPDATE ON BSC_BASIC_INFO 
FOR EACH ROW

DECLARE

  CREDIT_TRANS VARCHAR2(20);
  CRED_EARN NUMBER;
  CRED_WT_EXM NUMBER;
  
    ROW_COUNT NUMBER;

  
  
BEGIN
  CREDIT_TRANS := :NEW.CREDIT_TRANSFER;
  CRED_EARN := :NEW.CREDIT_EARNED;
  CRED_WT_EXM := :NEW.CRE_EARN_WITHOUT_EXEMPTION;

  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (CRED_EARN != CRED_WT_EXM) THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
                                                /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'BSC Credit Earned without Exemption.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'BSC Credit Earned without Exemption.');

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'BSC Credit Earned without Exemption.';
          
          SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
          
          END IF;
          
IF (CREDIT_TRANS = 'yes') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
                                                /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'BSC Credit Transfered.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'BSC Credit Transfered.');

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'BSC Credit Transfered.';
          
          SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
          
          END IF;
    
  
  
  
END;
/
ALTER TRIGGER "BAHAR"."BSC_BASIC_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BSC_DOC_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."BSC_DOC_ELIG" 
AFTER UPDATE ON BSC_DOCUMENT 
FOR EACH ROW

DECLARE

  TRANS VARCHAR2(20);
  CERT VARCHAR2(20);
  TESTI VARCHAR2(20);
  TESTI_AUTH VARCHAR2(20);
  
  ROW_COUNT NUMBER;
  DOC_COUNT NUMBER;
  
  
BEGIN /********* DONE *********************/

  TRANS := :NEW.TRANSCRIPT;
  CERT := :NEW."CERTIFICATE";
  TESTI := :NEW.TESTIMONIAL;
  TESTI_AUTH := :NEW.TESTIMONIAL_AUTHORIZED_PERSON;
  
    ROW_COUNT := 0;
    
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
  
      DOC_COUNT := 0;
      
  SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      


IF (TESTI_AUTH = 'no' OR TESTI = 'no' OR CERT = 'no' OR TRANS = 'no' ) THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
END IF;


        IF (TRANS = 'no' ) THEN                                                 /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC TRANSCRIPT missing%';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_BSC TRANSCRIPT missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;        

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC TRANSCRIPT missing%';
          
                     SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                    END IF;                          

                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;
          
          END IF;
          
        IF (CERT = 'no') THEN                                                    /*Changing Ineligibility Comments Table*/    
                
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC CERTIFICATE missing%';
          
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_BSC CERTIFICATE missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
                    DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC CERTIFICATE missing%';
          
                     SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    

                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                  
          
          END IF;
          
        IF (TESTI = 'no') THEN                                                   /*Changing Ineligibility Comments Table*/

          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC TESTIMONIAL missing%';
          
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_BSC TESTIMONIAL missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
          
                    DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC TESTIMONIAL missing%';
          
          
                     SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    

                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                    
                    
            END IF;
           
        IF (TESTI_AUTH = 'no') THEN                                              /*Changing Ineligibility Comments Table*/

                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC TESTIMONIAL by AUTHORISTHED Person missing%';
          
                            
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_BSC TESTIMONIAL by AUTHORISTHED Person missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
          
                    DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;          
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_BSC TESTIMONIAL by AUTHORISTHED Person missing%';
          
          
                     SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    

                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                    
                    
        END IF;
    
    
  IF (TESTI_AUTH != 'no' AND TESTI != 'no' AND CERT != 'no' AND TRANS != 'no' ) THEN

    
    DELETE FROM INELIGIBILITY
        WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
        AND COMMENTS LIKE 'DOC_BSC %';
        
                            DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
        
                   SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    

                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                    
    
  END IF;
END;
/
ALTER TRIGGER "BAHAR"."BSC_DOC_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ELIG_ADM_TEST
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."ELIG_ADM_TEST" 
BEFORE UPDATE ON ELIGIBILITY 
FOR EACH ROW

DECLARE

  PROG VARCHAR2(20);
  
BEGIN

  SELECT "PROGRAM" INTO PROG FROM CURRENT_ADMISSION_INFO WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (:NEW.IS_ELIGIBLE_ADM_TEST = 'yes') THEN
            
          DELETE FROM ADMISSION_TEST
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
              
          INSERT INTO ADMISSION_TEST (APPLICANT_SERIAL, "PROGRAM",PRESENT_ADM_TEST, MARKS) 
          VALUES (:NEW.APPLICANT_SERIAL, PROG, 'PENDING', 0);

          
 ELSE
                   
          DELETE FROM ADMISSION_TEST
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
          
END IF;
  
END;
/
ALTER TRIGGER "BAHAR"."ELIG_ADM_TEST" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HSC_DOC_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."HSC_DOC_ELIG" 
AFTER UPDATE ON HIGHER_SECONDARY_DOCUMENT 
FOR EACH ROW

DECLARE

  TRANS VARCHAR2(20);
  CERT VARCHAR2(20);

  ROW_COUNT NUMBER;
  DOC_COUNT NUMBER;  
  
  
BEGIN /********* DONE *********************/
  TRANS := :NEW.TRANSCRIPT;
  CERT := :NEW."CERTIFICATE";
  
  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
  
  
      DOC_COUNT := 0;
      
  SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;  


IF (CERT = 'no' OR TRANS = 'no' ) THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
END IF;

        IF (TRANS = 'no' ) THEN                                                 /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_HSC TRANSCRIPT missing%';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_HSC TRANSCRIPT missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;  
    
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;        

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_HSC TRANSCRIPT missing%';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                    
          
          END IF;
          
        IF (CERT = 'no') THEN                                                    /*Changing Ineligibility Comments Table*/    
                
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_HSC CERTIFICATE missing%';
          
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_HSC CERTIFICATE missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;   
    
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;        
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_HSC CERTIFICATE missing%';
          
                  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
        
                IF (ROW_COUNT = 0) THEN
      
                      UPDATE ELIGIBILITY
                      SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                      WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                      
                END IF;
                
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                
          
          
          END IF;
          
  IF (CERT != 'no' AND TRANS != 'no' ) THEN
   
    DELETE FROM INELIGIBILITY
        WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
        AND COMMENTS LIKE 'DOC_HSC %';
        
        
        
    DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';        
        
                          SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
        
                IF (ROW_COUNT = 0) THEN
      
                      UPDATE ELIGIBILITY
                      SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                      WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                      
                END IF;
                
                
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;              
 
    
  END IF;
  
END;
/
ALTER TRIGGER "BAHAR"."HSC_DOC_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HSC_GPA_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."HSC_GPA_ELIG" 
BEFORE INSERT OR UPDATE ON HIGHER_SECONDARY_GPA 

FOR EACH ROW

DECLARE

  GPA_LESS VARCHAR2(20);
  GPA_AB VARCHAR2(20);
  GPA_SSC VARCHAR2(20);

    ROW_COUNT NUMBER;
  
BEGIN
  
  GPA_LESS := :NEW.GPA_LESS_2;
  GPA_AB := :NEW.GPA_AB_3_5;
  
  SELECT GPA_AB_3_5 INTO GPA_SSC FROM SECONDARY_GPA WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
  
    ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;



IF (GPA_LESS = 'yes') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
        
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'HSC GPA is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'HSC GPA is less than required.'); 
          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'HSC GPA is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;

  END IF;
  
IF (GPA_AB = 'no' AND GPA_SSC = 'no') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC GPA/HSC GPA is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'SSC GPA/HSC GPA is less than required.');
          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC GPA/HSC GPA is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          


  END IF;  
  
END;
/
ALTER TRIGGER "BAHAR"."HSC_GPA_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger HSC_MARKS_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."HSC_MARKS_ELIG" 
BEFORE UPDATE ON HIGHER_SECONDARY_MARKS 

FOR EACH ROW

DECLARE

  FIRST_D VARCHAR2(20);
  THIRD_D VARCHAR2(20);
  SSC_D VARCHAR2(20);

    ROW_COUNT NUMBER;
 
  
BEGIN
  FIRST_D := :NEW.FIRST_DIV;
  THIRD_D := :NEW.THIRD_DIV;

  SELECT FIRST_DIV INTO SSC_D FROM SECONDARY_MARKS WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL; 
  
      ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (THIRD_D = 'yes') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'HSC MARK is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'HSC MARK is less than required.');
          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'HSC MARK is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          

  END IF;
  
IF (FIRST_D = 'no' AND SSC_D = 'no') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC MARK/HSC MARK is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'SSC MARK/HSC MARK is less than required.');
          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC MARK/HSC MARK is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          

  END IF;   
  
  
END;
/
ALTER TRIGGER "BAHAR"."HSC_MARKS_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MSC_BASIC_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."MSC_BASIC_ELIG" 
BEFORE INSERT OR UPDATE ON MSC_BASIC_INFO 
FOR EACH ROW

DECLARE

  CREDIT_TRANS VARCHAR2(20);
  CRED_EARN NUMBER;
  CRED_WT_EXM NUMBER;

  ROW_COUNT NUMBER;  
  
BEGIN
  CREDIT_TRANS := :NEW.CREDIT_TRANSFER;
  CRED_EARN := :NEW.CREDIT_EARNED;
  CRED_WT_EXM := :NEW.CRE_EARN_WITHOUT_EXEMPTION;

  
  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (CRED_EARN != CRED_WT_EXM) THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
                                                /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC Credit Earned without Exemption.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'MSC Credit Earned without Exemption.');

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC Credit Earned without Exemption.';
          
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          
          
          END IF;
          
IF (CREDIT_TRANS = 'yes') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
                                                /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC Credit Transfered.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'MSC Credit Transfered.');

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC Credit Transfered.';
          
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          
          
          END IF;
    
  
  
  
END;
/
ALTER TRIGGER "BAHAR"."MSC_BASIC_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MSC_CGPA_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."MSC_CGPA_ELIG" 
BEFORE UPDATE ON MSC_CGPA

FOR EACH ROW

DECLARE

  GPA_AB VARCHAR2(20);

  ROW_COUNT NUMBER;    
  
BEGIN
  
  GPA_AB := :NEW.CGPA_AB_2_7_5;

  
  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (GPA_AB = 'no') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
              
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC CGPA is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'MSC CGPA is less than required.');

          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC CGPA is less than required.';
          
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          
        
    
    
  END IF;
  
  
END;
/
ALTER TRIGGER "BAHAR"."MSC_CGPA_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MSC_DOC_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."MSC_DOC_ELIG" 
AFTER UPDATE ON MSC_DOCUMENT 
FOR EACH ROW

DECLARE

  TRANS VARCHAR2(20);
  CERT VARCHAR2(20);
  TESTI VARCHAR2(20);
  TESTI_AUTH VARCHAR2(20);
  
  ROW_COUNT NUMBER;
  DOC_COUNT NUMBER;   
  
BEGIN /********* DONE *********************/
  TRANS := :NEW.TRANSCRIPT;
  CERT := :NEW."CERTIFICATE";
  TESTI := :NEW.TESTIMONIAL;
  TESTI_AUTH := :NEW.TESTIMONIAL_AUTHORIZED_PERSON;

 ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
  
      DOC_COUNT := 0;
      
  SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;    


IF (TESTI_AUTH = 'no' OR TESTI = 'no' OR CERT = 'no' OR TRANS = 'no' ) THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
END IF;


        IF (TRANS = 'no' ) THEN                                                 /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC TRANSCRIPT missing%';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_MSC TRANSCRIPT missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;   
    
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC TRANSCRIPT missing%';
          
           SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;     
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                      
          
          END IF;
          
        IF (CERT = 'no') THEN                                                    /*Changing Ineligibility Comments Table*/    
                
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC CERTIFICATE missing%';
          
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_MSC CERTIFICATE missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;        
    
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC CERTIFICATE missing%';
          
           SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;  
                    
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                      
          END IF;
          
        IF (TESTI = 'no') THEN                                                   /*Changing Ineligibility Comments Table*/

          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC TESTIMONIAL missing%';
          
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_MSC TESTIMONIAL missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     
    
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC TESTIMONIAL missing%';
          
           SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;      
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                      
            END IF;
           
        IF (TESTI_AUTH = 'no') THEN                                              /*Changing Ineligibility Comments Table*/

                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC TESTIMONIAL by AUTHORISTHED Person missing%';
          
                            
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_MSC TESTIMONIAL by AUTHORISTHED Person missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;       
    
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_MSC TESTIMONIAL by AUTHORISTHED Person missing%';
          
           SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;     
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                      
        END IF;
    
    
  IF (TESTI_AUTH != 'no' AND TESTI != 'no' AND CERT != 'no' AND TRANS != 'no' ) THEN
    
    DELETE FROM INELIGIBILITY
        WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
        AND COMMENTS LIKE 'DOC_MSC %';
        
        
        
    DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';          
        
           SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;    
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                      
    
  END IF;
END;
/
ALTER TRIGGER "BAHAR"."MSC_DOC_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MSC_MARKS_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."MSC_MARKS_ELIG" 
BEFORE UPDATE ON MSC_MARKS 
FOR EACH ROW

DECLARE

  MARKS_AB VARCHAR2(20);

  ROW_COUNT NUMBER;    
  
BEGIN
  MARKS_AB := :NEW.MARKS_AB_55_PER;

  
  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (MARKS_AB = 'no') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC MARK is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'MSC MARK is less than required.');
    
    ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'MSC MARK is less than required.';
          
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;   
    
    
  END IF;
  
  
END;
/
ALTER TRIGGER "BAHAR"."MSC_MARKS_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PRE_ADM_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."PRE_ADM_ELIG" 
BEFORE INSERT OR UPDATE ON PRE_ADMISSION
FOR EACH ROW

DECLARE

  ROW_COUNT NUMBER;  
  
BEGIN

  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

IF (:NEW."PROGRAM" = 'PhD' OR :NEW."PROGRAM" = 'MSc') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
                                                /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'Previously Admitted.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'Previously Admitted.');

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'Previously Admitted.';
          
          SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    
          
          END IF;
  
END;
/
ALTER TRIGGER "BAHAR"."PRE_ADM_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PRE_ADM_ELIG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."PRE_ADM_ELIG2" 
AFTER DELETE ON PRE_ADMISSION
FOR EACH ROW

DECLARE

    ROW_COUNT NUMBER;
  
BEGIN

  ROW_COUNT := 0;

         
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL
          AND COMMENTS LIKE 'Previously Admitted.';
          
                    SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
          
      
    
END;
/
ALTER TRIGGER "BAHAR"."PRE_ADM_ELIG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SSC_DOC_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."SSC_DOC_ELIG" 
AFTER UPDATE ON SECONDARY_DOCUMENT 
FOR EACH ROW

DECLARE

  TRANS VARCHAR2(20);
  CERT VARCHAR2(20);

  ROW_COUNT NUMBER;
  DOC_COUNT NUMBER;       
  
  
BEGIN /********* DONE *********************/
  TRANS := :NEW.TRANSCRIPT;
  CERT := :NEW."CERTIFICATE";
  
  
  ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
  
  
      DOC_COUNT := 0;
      
  SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;  
  


IF (CERT = 'no' OR TRANS = 'no' ) THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
END IF;

        IF (TRANS = 'no' ) THEN                                                 /*Changing Ineligibility Comments Table*/
            
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_SSC TRANSCRIPT missing%';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_SSC TRANSCRIPT missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     
    

          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_SSC TRANSCRIPT missing%';
          
                    SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                       
          
          
          END IF;
          
        IF (CERT = 'no') THEN                                                    /*Changing Ineligibility Comments Table*/    
                
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_SSC CERTIFICATE missing%';
          
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC_SSC CERTIFICATE missing.');
          
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;  
    
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';
          
          INSERT INTO INELIGIBILITY_DOC (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'DOC');
          
          DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS NOT LIKE 'DOC';
          
    UPDATE DOCUMENT_INFO
    SET REQUIRED_MISSING_DOC = 'yes'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;     
          
          ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC_SSC CERTIFICATE missing%';
          
          
                    SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                       
          
          
          END IF;
          
  IF (CERT != 'no' AND TRANS != 'no' ) THEN
   
    DELETE FROM INELIGIBILITY
        WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
        AND COMMENTS LIKE 'DOC_SSC %';
        
        
    DELETE FROM INELIGIBILITY_DOC
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'DOC';         
        
                  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;
                    
                   SELECT count(*) INTO DOC_COUNT FROM INELIGIBILITY_DOC WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;      
                   
                    IF (DOC_COUNT = 0) THEN
          
                          UPDATE DOCUMENT_INFO
                          SET REQUIRED_MISSING_DOC = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;                          
                          
                    END IF;                       
          
    
  END IF;
  
END;
/
ALTER TRIGGER "BAHAR"."SSC_DOC_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SSC_GPA_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."SSC_GPA_ELIG" 
BEFORE UPDATE ON SECONDARY_GPA 
FOR EACH ROW

DECLARE

  GPA_LESS VARCHAR2(20);
  GPA_AB VARCHAR2(20);
  GPA_HSC VARCHAR2(20);

      ROW_COUNT NUMBER;
  
BEGIN
  GPA_LESS := :NEW.GPA_LESS_2;
  GPA_AB := :NEW.GPA_AB_3_5;

  SELECT GPA_AB_3_5 INTO GPA_HSC FROM HIGHER_SECONDARY_GPA WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
  
      ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;


IF (GPA_LESS = 'yes') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC GPA is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'SSC GPA is less than required.');   
          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC GPA is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          
   
  END IF;
  
IF (GPA_AB = 'no' AND GPA_HSC = 'no') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;

          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC GPA/HSC GPA is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'SSC GPA/HSC GPA is less than required.');  
          
ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC GPA/HSC GPA is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          

  END IF;  
  
END;
/
ALTER TRIGGER "BAHAR"."SSC_GPA_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger SSC_MARKS_ELIG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."SSC_MARKS_ELIG" 
BEFORE UPDATE ON SECONDARY_MARKS 
FOR EACH ROW

DECLARE

  FIRST_D VARCHAR2(20);
  THIRD_D VARCHAR2(20);
  HSC_D VARCHAR2(20);
     ROW_COUNT NUMBER;
     
BEGIN
  FIRST_D := :NEW.FIRST_DIV;
  THIRD_D := :NEW.THIRD_DIV;

  SELECT FIRST_DIV INTO HSC_D FROM HIGHER_SECONDARY_MARKS WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL; 
  
      ROW_COUNT := 0;
  
  SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;  

IF (THIRD_D = 'yes') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC MARK is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'SSC MARK is less than required.');

ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC MARK is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;          
    
  END IF;
  
  IF (FIRST_D = 'no' AND HSC_D = 'no') THEN
    UPDATE ELIGIBILITY
    SET IS_ELIGIBLE_ADM_TEST = 'no'
    WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
    
    
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC MARK/HSC MARK is less than required.';
              
          INSERT INTO INELIGIBILITY (APPLICANT_SERIAL, comments) 
          VALUES (:NEW.APPLICANT_SERIAL, 'SSC MARK/HSC MARK is less than required.');

ELSE
                   
          DELETE FROM INELIGIBILITY
          WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL
          AND COMMENTS LIKE 'SSC MARK/HSC MARK is less than required.';
          
            SELECT count(*) INTO ROW_COUNT FROM INELIGIBILITY WHERE APPLICANT_SERIAL = :NEW.APPLICANT_SERIAL;
            
                    IF (ROW_COUNT = 0) THEN
          
                          UPDATE ELIGIBILITY
                          SET IS_ELIGIBLE_ADM_TEST = 'PENDING'
                          WHERE APPLICANT_SERIAL = :OLD.APPLICANT_SERIAL;
                          
                    END IF;   

  END IF;
  
  
END;
/
ALTER TRIGGER "BAHAR"."SSC_MARKS_ELIG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger STUDENT_AUTO_INC_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "BAHAR"."STUDENT_AUTO_INC_TRI" 
before insert on STUDENT_PERSONAL_INFO
for each row
begin
select auto_inc.nextval+100000 into :new.APPLICANT_SERIAL from dual;
end;
/
ALTER TRIGGER "BAHAR"."STUDENT_AUTO_INC_TRI" ENABLE;
